name: Build and Release APK

on:
  push:
    tags:
      - 'v*'  # 当推送以v开头的标签时触发
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
        
    - name: Setup Gradle Wrapper
      run: |
        mkdir -p gradle/wrapper
        curl -L -o gradle/wrapper/gradle-wrapper.jar https://github.com/gradle/gradle/raw/v8.11.1/gradle/wrapper/gradle-wrapper.jar
        cat > gradle/wrapper/gradle-wrapper.properties << 'EOF'
        distributionBase=GRADLE_USER_HOME
        distributionPath=wrapper/dists
        distributionUrl=https\://services.gradle.org/distributions/gradle-8.11.1-bin.zip
        networkTimeout=10000
        validateDistributionUrl=true
        zipStoreBase=GRADLE_USER_HOME
        zipStorePath=wrapper/dists
        EOF
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build APK
      run: ./gradlew assembleRelease
      
    - name: List build outputs
      run: |
        echo "=== APK files ==="
        find app/build/outputs -name "*.apk" -type f
        echo "=== Directory structure ==="
        ls -la app/build/outputs/
        ls -la app/build/outputs/apk/
        ls -la app/build/outputs/apk/release/
        
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/v')
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        files: app/build/outputs/apk/release/app-release.apk
        body: |
          ## SurfingTile ${{ github.ref_name }}
          
          ### 下载
          - **APK**: 适用于直接安装到Android设备
          
          ### 安装说明
          1. 下载APK文件
          2. 在Android设备上启用"未知来源"应用安装
          3. 安装APK文件
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload APK as artifact (manual trigger)
      if: github.event_name == 'workflow_dispatch'
      uses: actions/upload-artifact@v4
      with:
        name: app-release-apk
        path: app/build/outputs/apk/release/app-release.apk 